[tool.poetry]
name = "dose-response-analyzer"
version = "0.1.0"
description = "A comprehensive Python package for dose-response curve analysis, equivalent to R's drc package"
authors = ["Toan Phung <toan.phung@proteo.info>", "Claude Code <noreply@anthropic.com>"]
readme = "README.md"
license = "MIT"
homepage = "https://github.com/noatgnu/dose-response-analyzer"
repository = "https://github.com/noatgnu/dose-response-analyzer"
keywords = ["dose-response", "curve-fitting", "pharmacology", "toxicology", "ic50", "drc", "logistic", "hill", "gompertz", "weibull"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Chemistry",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
]
packages = [{include = "dra"}]
include = [
    "dra/sample_files/*.csv",
    "dra/sample_files/*.txt",
    "dra/sample_files/*.xlsx",
]

[tool.poetry.dependencies]
python = ">=3.11,<4.0"
scipy = "^1.16.1"
numpy = "^2.3.2"
pandas = "^2.3.1"
scikit-learn = "^1.7.1"
matplotlib = "^3.10.5"
streamlit = {version = "^1.48.1", optional = true}

[tool.poetry.extras]
streamlit = ["streamlit"]

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pytest-cov = "^6.0.0"
black = "^24.0.0"
isort = "^5.13.0"
flake8 = "^7.0.0"
mypy = "^1.8.0"
pre-commit = "^4.0.0"

[tool.poetry.group.docs.dependencies]
sphinx = "^8.0.0"
sphinx-rtd-theme = "^3.0.0"
myst-parser = "^4.0.0"

[tool.poetry.scripts]
dose-response-app = "dra.streamlit_app:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# Black configuration
[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

# Coverage configuration
[tool.coverage.run]
source = ["dra"]
omit = [
    "*/tests/*",
    "*/test_*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

per-file-ignores = [
    "__init__.py:F401",  # imported but unused
]
